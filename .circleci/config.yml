# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs

defaults: &dockerImage
  docker:
    - image:circleci/node:13.8.0

commands:
  print_pipeline_id:
    description: "A simple command to print the pipeline ID"
    parameters:
      to:
        type: string
        default: "Hello people"
    steps: 
      - run: echo <<parameters.to>>

jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run: echo Hello, World!

  print_hello:
    docker: 
      - image: circleci/node:13.8.0
    steps: 
      - checkout
      - run: echo hello

  print_world:
    docker: 
      - image: circleci/node:13.8.0
    steps: 
      - checkout
      - run: echo "world"
  print_env_variable:
    docker:
      - image: circleci/node:13.8.0
    steps: 
      - checkout
      - run: echo $owners_name
  save_hello_world_output:
    docker:
      - image:circleci/node:13.8.0
    steps:
      - status
      - run: echo "hello world" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt
  print_output_file:
    docker:
      - image:circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: /tmp/dir/output.txt
      - run: cat ~/output.txt
  print_env_inbuilt_variable:
    <<:*dockerImage
    steps: 
      - print_pipeline_id
        to: $CIRCLE_WORKFLOW_ID

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - welcome/run
      - say-hello
      - print_hello
      - print_world
      - print_env_variable
      - save_hello_world_output
      - print_output_file
        requires:
          - save_hello_world_output
      - print_env_inbuilt_variable
